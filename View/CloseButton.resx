<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DQAACw0B7QfALAAABF9JREFUeF7t2s2KHFUYx+FJQJcB0YW4ExcmJsQsVVC8PnEhiCB4C4JXIbgQEUG8
        B4N7JX69FX1JhlT3dHVXna96Hvhvenbn9G+YgXMFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAANCq27F3Yx/GXpk+4CJvxD6O3Y3dmj6gXw9jv8T++X9PYp/FXo6xzHRmX8X+juV5fh97J0aHHsV+
        i+VlPr9vYiI53XRW05nNneXj2PSLiI4ciyMnktMciyMnko6cEkdOJMedEkdOJB1YEkdOJPOWxJETScPO
        iSMnkuvOiSMnkgZdEkdOJP+5JI6cSBqyRhy5vUeyRhw5kTRgzThye41kzThyIqnoQWztOHJ7i2SLOHJT
        JPdjFDQ9cfghNncha20vkWwZR+6nmGcpBd2LzV3E2hs9khJx5DxJKWh6LDd3CVts1EhKxjHtvRiFvB57
        /tHc1hstktJx/B67E6OgL2Nzl7HVRomkdBzTPolRWI2L7j2SGmf2deylGBWI5HTi2CmR3EwcOyeSw8TB
        UyJ5kTi4RiTPiINZIhEHN9hzJOLgJHuMRBwssqdIxMFZ9hCJOLjIyJGIg1WMGIk4WNVIkYiDTYwQiTjY
        VM+RiIMieoxEHBTVUyTioIoeIhEHVbUciThoQouRiIOmtBSJOGhSC5GIg6bVjEQcdKFWJOKgGzUiKTlx
        cLFRIxEHqxktEnGwulEiEQeb6T0ScbC5XiMRB8X0Fok4KK6XSMRBNa1HIg6qazUScdCM1iIRB81pJRJx
        0KzakYiD5tWKRBx0QSBwgD+x4AD/pMMBrcSREwnNaC2OnEiortU4ciKhmtbjyImE4nqJIycSiuktjpxI
        2FyvceREwmZ6jyMnElY3Shw5kbCa0eLIiYSLjRpHTiScrUYc0xd22tzPtppIWKxWHNMXdZpIaFbNOJJI
        aFILcSSR0JSW4kgioQktxpFEQlUtx5FEQhU9xJFEQlE9xZFEQhE9xpFEwqZ6jiOJhE2MEEcSCasaKY4k
        ElYxYhxJJFxk5DiSSDjLHuJIImGRPcWRRMJJ9hhHEglH7TmOJBJmieMZkXCNOF4kEp4Sx2Ei2Tlx3Ewk
        OyWO04lkZ8SxnEh25PPY3IVstVEuukYkX8Qo6NXYk9jcZWyx0X4Llo7kr9hrMQr5KDZ3EVts1D8RSkfy
        QYxCHsXmLmHtjRpHKhnJmzEKuR37OTZ3EWtt9DhSiUi+jVHYg9jj2NyFXLq9xJG2jOTX2NsxKngYWzuS
        vcWRtohkiuN+jIrWjGSvcaQ1IxFHQ9aIZO9xpDUiEUeDLolEHNddEok4GnZOJOKYd04k4ujAkkjEcdyS
        SMTRkVMiEcdpTolEHB06Fok4ljkWiTg6di/2XSwv88/Y9ApYHMtNZ/Zp7I9YnuePsemM6dit2Fux6bHc
        9AqYy9yJvR+7G5vOFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgNVdX/wKXYOc0GYKD
        BwAAAABJRU5ErkJggg==
</value>
  </data>
</root>